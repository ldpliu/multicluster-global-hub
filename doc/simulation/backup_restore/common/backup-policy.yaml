---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: acm-volsync-config
  namespace: open-cluster-management-backup
  annotations:
    policy.open-cluster-management.io/categories: CA Security Assessment and Authorization
    policy.open-cluster-management.io/controls: CA-2 Security Assessments, CA-7 Continuous Monitoring
    policy.open-cluster-management.io/standards: NIST SP 800-53
spec:
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: check-backup-schedule
        spec:
          object-templates-raw: |
            {{- /* Specify the parameters  */ -}}
            {{- $api := "cluster.open-cluster-management.io/v1beta1" }}
            {{- $velero_api := "velero.io/v1" }}
            {{- $kind_schedule := "Schedule" }}
            {{- $schedule_label := "cluster.open-cluster-management.io/backup-schedule-type, cluster.open-cluster-management.io/backup-schedule-type in (resources)"}}
            {{- $kind_restore := "Restore" }}
            {{- $ns := "open-cluster-management-backup" }}   
            {{- $volsync_map := "volsync-config" }} 
            {{- $volsync_label := "cluster.open-cluster-management.io/volsync" }}
            {{- $pv_claim_cond := gt (len ( lookup "v1" "PersistentVolumeClaim" "" "" $volsync_label).items ) 0 }}
            {{- $volsync_pvcs := "volsync-config-pvcs" }}
            
            {{- $volsync_backup_cond := gt (len ( lookup $velero_api $kind_schedule $ns "" $schedule_label).items ) 0  }}
            {{- $volsync_restore_cond := eq ( lookup "v1" "ConfigMap" $ns $volsync_pvcs ).metadata.name $volsync_pvcs }}

            {{- /* Backup Schedule must be running if this is not a restore hub */ -}}
            {{ if and (not $volsync_restore_cond) $pv_claim_cond  }}
            - complianceType: musthave
              objectDefinition:
                apiVersion: {{ $api }}
                kind: BackupSchedule
                metadata:
                  namespace: {{ $ns }}
                status:
                  phase: Enabled
            {{- end }}
          remediationAction: inform
          severity: high
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: check-storage-configmap
        spec:
          object-templates-raw: |
            {{- /* Specify the parameters  */ -}}
            {{- $api := "cluster.open-cluster-management.io/v1beta1" }}
            {{- $velero_api := "velero.io/v1" }}
            {{- $kind_schedule := "Schedule" }}
            {{- $schedule_label := "cluster.open-cluster-management.io/backup-schedule-type, cluster.open-cluster-management.io/backup-schedule-type in (resources)"}}
            {{- $kind_restore := "Restore" }}
            {{- $ns := "open-cluster-management-backup" }}   
            {{- $volsync_secret := "restic-secret" }} 
            {{- $volsync_map := "volsync-config" }} 
            {{- $volsync_label := "cluster.open-cluster-management.io/volsync" }}
            {{- $pv_claim_cond := gt (len ( lookup "v1" "PersistentVolumeClaim" "" "" $volsync_label).items ) 0 }}
            {{- $volsync_pvcs := "volsync-config-pvcs" }}
            
            {{- $volsync_backup_cond := gt (len ( lookup $velero_api $kind_schedule $ns "" $schedule_label).items ) 0  }}
            {{- $volsync_restore_cond := eq ( lookup "v1" "ConfigMap" $ns $volsync_pvcs ).metadata.name $volsync_pvcs }}

            {{- /* The volsync-config ConfigMap and secret must be defined under the open-cluster-management-backup ns, if a BackupSchedule is running and there are PVCs with the volsync label. */ -}}
            {{- /* Or for a restore hub, there is a restore resource and a volsync pvc config map */ -}}

            {{ if or (and $pv_claim_cond $volsync_backup_cond) $volsync_restore_cond  }}
            - complianceType: musthave
              objectDefinition:
                apiVersion: v1
                kind: ConfigMap
                metadata:
                  name: {{ $volsync_map }}
                  namespace: {{ $ns }}
                  {{ if not $volsync_restore_cond }}
                  labels:
                    cluster.open-cluster-management.io/backup: volsync
                  {{- end }}
            - complianceType: musthave
              objectDefinition:
                apiVersion: v1
                kind: Secret
                metadata:
                  name: {{ $volsync_secret }}
                  namespace: {{ $ns }}
                  {{ if not $volsync_restore_cond }}
                  labels:
                    cluster.open-cluster-management.io/backup: volsync
                  {{- end }}
                type: Opaque
            {{- end }}
          remediationAction: inform
          severity: high 
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: create-volsync-addon
        spec:
          object-templates-raw: |
            {{- /* Specify the parameters  */ -}}
            {{- $api := "cluster.open-cluster-management.io/v1beta1" }}
            {{- $velero_api := "velero.io/v1" }}
            {{- $kind_schedule := "Schedule" }}
            {{- $schedule_label := "cluster.open-cluster-management.io/backup-schedule-type, cluster.open-cluster-management.io/backup-schedule-type in (resources)"}}
            {{- $kind_restore := "Restore" }}
            {{- $ns := "open-cluster-management-backup" }}   
            {{- $volsync_map := "volsync-config" }} 
            {{- $volsync_label := "cluster.open-cluster-management.io/volsync" }}
            {{- $pv_claim_cond := gt (len ( lookup "v1" "PersistentVolumeClaim" "" "" $volsync_label).items ) 0 }}
            {{- $volsync_backup_cond := gt (len ( lookup $velero_api $kind_schedule $ns "" $schedule_label).items ) 0  }}
            {{- $volsync_pvcs := "volsync-config-pvcs" }}
            {{- $volsync_restore_cond := eq ( lookup "v1" "ConfigMap" $ns $volsync_pvcs ).metadata.name $volsync_pvcs }}

            {{- /* Create the volsync addon - if BackupSchedule exists and there are PVCs with volsync label */ -}}
            {{ if or (and $pv_claim_cond $volsync_backup_cond) $volsync_restore_cond  }}
                - complianceType: musthave
                  objectDefinition:
                    apiVersion: addon.open-cluster-management.io/v1alpha1
                    kind: ManagedClusterAddOn
                    metadata:
                      name: volsync
                      namespace: local-cluster
                      labels:
                        cluster.open-cluster-management.io/backup: volsync
                    spec:
                      installNamespace: open-cluster-management-agent-addon
                    status:
                      conditions:
                        - status: 'True'
            {{- end }}
          remediationAction: enforce
          severity: high
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: acm-volsync-source
  namespace: open-cluster-management-backup
  annotations:
    policy.open-cluster-management.io/categories: CA Security Assessment and Authorization
    policy.open-cluster-management.io/controls: CA-2 Security Assessments, CA-7 Continuous Monitoring
    policy.open-cluster-management.io/standards: NIST SP 800-53
spec:
  disabled: false
  dependencies:
  - apiVersion: policy.open-cluster-management.io/v1
    compliance: Compliant
    kind: Policy
    name: acm-volsync-config
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: create-replication-source
        spec:
          object-templates-raw: |
            {{- /* Specify the parameters  */ -}}
            {{- $api := "cluster.open-cluster-management.io/v1beta1" }}
            {{- $velero_api := "velero.io/v1" }}
            {{- $kind_schedule := "Schedule" }}
            {{- $schedule_label := "cluster.open-cluster-management.io/backup-schedule-type, cluster.open-cluster-management.io/backup-schedule-type in (resources)"}}
            {{- $ns := "open-cluster-management-backup" }}   
            {{- $volsync_secret := "restic-secret" }} 
            {{- $volsync_map := "volsync-config" }} 
            {{- $volsync_label := "cluster.open-cluster-management.io/volsync" }}
            {{- $pv_claim_cond := gt (len ( lookup "v1" "PersistentVolumeClaim" "" "" $volsync_label).items ) 0 }}
            {{- $volsync_backup_cond := gt (len ( lookup $velero_api $kind_schedule $ns "" $schedule_label).items ) 0  }}
            {{- $volsync_pvcs := "volsync-config-pvcs" }}

            {{- /* Create the volsync ReplicationSource and secret - if BackupSchedule exists ; delete ReplicationSource otherwise */ -}}
            {{ if $volsync_backup_cond }}
              {{- range $rs := (lookup "volsync.backube/v1alpha1" "ReplicationSource" "" "" $volsync_label).items }}
                  {{ $pvc_rs := lookup "v1" "PersistentVolumeClaim" $rs.metadata.namespace $rs.metadata.name $volsync_label}}
                  {{ if or (not (eq $pvc_rs.metadata.name $rs.metadata.name)) (eq (index $pvc_rs.metadata.labels $volsync_label) "<no value>")}}   
                    - complianceType: mustnothave
                      objectDefinition:
                        kind: ReplicationSource
                        apiVersion: volsync.backube/v1alpha1
                        metadata:
                          name: {{ $rs.metadata.name }}
                          namespace: {{ $rs.metadata.namespace }}
                          labels:
                            {{ $volsync_label }}: acm
                    - complianceType: mustnothave
                      objectDefinition:
                        kind: ConfigMap
                        apiVersion: v1
                        metadata:
                          name: {{( (cat $volsync_map "-info-" $rs.metadata.name ) | replace " " "") }}
                          namespace: {{ $rs.metadata.namespace }}
                  {{- end }}   
              {{- end }}

              {{- $volsync_pvcs_str := "" }}
              {{- range $pvc := (lookup "v1" "PersistentVolumeClaim" "" "" $volsync_label).items }}

                {{- if eq $pvc.status.phase "Bound" }}
                  {{- /* Use the volsync-config-pvcns-pvcname config instead of the default volsync-config map, if such map exists under the $ns */ -}}
                  {{- $pvc_config_name := ( (cat $volsync_map "-" $pvc.metadata.namespace "-" $pvc.metadata.name ) | replace " " "" ) }}

                  {{- $pvc_config_info_name := ( (cat $volsync_map "-info-" $pvc.metadata.name ) | replace " " "" ) }}

                  - complianceType: musthave
                    objectDefinition:
                      apiVersion: v1
                      kind: ConfigMap
                      metadata:
                        name: {{ $pvc_config_info_name }}
                        namespace: {{ $pvc.metadata.namespace }}
                        labels:
                          cluster.open-cluster-management.io/backup: volsync
                      data:
                        {{- if not ( eq  $pvc.spec.storageClassName "") }}
                        storageClassName: {{ $pvc.spec.storageClassName }}
                        {{- end }}
                        {{- if not ( eq  $pvc.spec.volumeMode "") }}
                        volumeMode: {{ $pvc.spec.volumeMode }}
                        {{- end }}
                        {{- if not ( eq  $pvc.spec.resources.requests.storage "") }}
                        resources.requests.storage: {{ $pvc.spec.resources.requests.storage }}
                        {{- end }}                        
                        {{- if not (empty $pvc.spec.accessModes ) }}
                          {{ $am_val := ""}}
                          {{- range $av := $pvc.spec.accessModes }}
                             {{ $am_val =  cat $am_val $av }}
                          {{- end }}
                        resources.accessModes: {{ $am_val }}
                        {{- end }}                        

                  {{ if eq ( lookup "v1" "ConfigMap" $ns $pvc_config_name ).metadata.name  $pvc_config_name }}   
                    {{ $volsync_map = $pvc_config_name }}
                  {{- end }}   

                  {{- $volsync_pvcs_str = ( (cat $volsync_pvcs_str "##" $pvc.metadata.namespace "#" $pvc.metadata.name ) | replace " " "" ) }}
                  {{- $common_restic_repo := ( lookup "v1" "Secret" $ns $volsync_secret ).data.RESTIC_REPOSITORY | base64dec }}
                  {{- $secretName := ( (cat $pvc.metadata.name "-"  (fromConfigMap $ns $volsync_map "repository") ) | replace " " "" ) }}                 
                  - complianceType: musthave
                    objectDefinition:
                      apiVersion: v1
                      kind: Secret
                      metadata:
                        name: '{{ $secretName }}'
                        namespace: {{ $pvc.metadata.namespace }}
                      data:
                {{- range $key, $value := ( lookup "v1" "Secret" $ns $volsync_secret ).data }}
                    {{- if not (eq $key "RESTIC_REPOSITORY")}}
                        {{ $key }}: {{ $value }}
                    {{- end }}    
                {{- end }}
                        RESTIC_REPOSITORY: {{ ( ( (cat $common_restic_repo "/" $pvc.metadata.namespace "-" $pvc.metadata.name ) | replace " " "" ) | base64enc ) }}                      
                      type: Opaque
                  - complianceType: musthave
                    objectDefinition:
                      kind: ReplicationSource
                      apiVersion: volsync.backube/v1alpha1
                      metadata:
                        name: {{ $pvc.metadata.name }}
                        namespace: {{ $pvc.metadata.namespace }}
                        labels:
                          {{ $volsync_label }}: acm
                      spec:
                        restic:
                          cacheCapacity: '{{ fromConfigMap $ns $volsync_map "cacheCapacity" }}'
                          copyMethod: '{{ fromConfigMap $ns $volsync_map "copyMethod" }}'
                          pruneIntervalDays: '{{ fromConfigMap $ns $volsync_map "pruneIntervalDays" | toInt }}'
                          repository: '{{ $secretName }}'
                          retain:
                            daily: '{{ fromConfigMap $ns $volsync_map "retain_daily" | toInt }}'
                            hourly: '{{ fromConfigMap $ns $volsync_map "retain_hourly" | toInt }}'
                            monthly: '{{ fromConfigMap $ns $volsync_map "retain_monthly" | toInt }}'
                        sourcePVC: {{ $pvc.metadata.name }}
                        trigger:
                          schedule: '{{ fromConfigMap $ns $volsync_map "trigger_schedule" }}'
                {{- end }}        
              {{- end }}
                  - complianceType: musthave
                    objectDefinition:
                      apiVersion: v1
                      kind: ConfigMap
                      metadata:
                        name: {{ $volsync_pvcs }}
                        namespace: {{ $ns }}
                        labels:
                          cluster.open-cluster-management.io/backup: volsync
                          app: {{ $volsync_pvcs }}
                      data:
                        pvcs: {{ trimAll "##" $volsync_pvcs_str }}
            {{- else }}
              {{- range $pvc := (lookup "v1" "PersistentVolumeClaim" "" "" $volsync_label).items }}  
                  - complianceType: mustnothave
                    objectDefinition:
                      kind: ReplicationSource
                      apiVersion: volsync.backube/v1alpha1
                      metadata:
                        name: {{ $pvc.metadata.name }}
                        namespace: {{ $pvc.metadata.namespace }}
                        labels:
                          {{ $volsync_label }}: acm
                      spec:
                        sourcePVC: {{ $pvc.metadata.name }}
              {{- end }}
            {{- end }}
          pruneObjectBehavior: DeleteIfCreated
          remediationAction: enforce
          severity: high 
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: check-source-replication-success 
        spec:
          object-templates-raw: |
            {{- $volsync_label := "cluster.open-cluster-management.io/volsync" }}
            {{- $ns := "open-cluster-management-backup" }} 
            {{- $schedule_label := "cluster.open-cluster-management.io/backup-schedule-type, cluster.open-cluster-management.io/backup-schedule-type in (resources)"}}
            {{- $velero_api := "velero.io/v1" }}
            {{- $kind_schedule := "Schedule" }}
            {{- $volsync_backup_cond := gt (len ( lookup $velero_api $kind_schedule $ns "" $schedule_label).items ) 0  }}

            {{- /* The volsync replication-source should be successful */ -}}
            {{- range $pvc := (lookup "v1" "PersistentVolumeClaim" "" "" $volsync_label).items }}
              {{ if $volsync_backup_cond }}
              - complianceType: musthave
                objectDefinition:
                  apiVersion: volsync.backube/v1alpha1
                  kind: ReplicationSource
                  metadata:
                    namespace: {{ $pvc.metadata.namespace }}
                  status:
                    latestMoverStatus:
                      result: Successful       
              {{- end }}  
            {{- end }}
          remediationAction: inform
          severity: high
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: check-source-replication-errors 
        spec:
          object-templates-raw: |
            {{- $volsync_label := "cluster.open-cluster-management.io/volsync" }}
            {{- $ns := "open-cluster-management-backup" }} 
            {{- $schedule_label := "cluster.open-cluster-management.io/backup-schedule-type, cluster.open-cluster-management.io/backup-schedule-type in (resources)"}}
            {{- $velero_api := "velero.io/v1" }}
            {{- $kind_schedule := "Schedule" }}
            {{- $volsync_backup_cond := gt (len ( lookup $velero_api $kind_schedule $ns "" $schedule_label).items ) 0  }}

            {{- /* The volsync replication-source should not be failed */ -}}
            {{- range $pvc := (lookup "v1" "PersistentVolumeClaim" "" "" $volsync_label).items }}
              {{ if $volsync_backup_cond }}      
              - complianceType: mustnothave
                objectDefinition:
                  apiVersion: volsync.backube/v1alpha1
                  kind: ReplicationSource
                  metadata:
                    namespace: {{ $pvc.metadata.namespace }}
                  status:
                    latestMoverStatus:
                      result: Failed
              {{- end }}  
            {{- end }}
          remediationAction: inform
          severity: high
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: acm-volsync-destination
  namespace: open-cluster-management-backup
  annotations:
    policy.open-cluster-management.io/categories: CA Security Assessment and Authorization
    policy.open-cluster-management.io/controls: CA-2 Security Assessments, CA-7 Continuous Monitoring
    policy.open-cluster-management.io/standards: NIST SP 800-53
spec:
  disabled: false
  dependencies:
  - apiVersion: policy.open-cluster-management.io/v1
    compliance: Compliant
    kind: Policy
    name: acm-volsync-config
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: create-replication-destination
        spec:
          object-templates-raw: |
            {{- /* Specify the parameters  */ -}}
            {{- $api := "cluster.open-cluster-management.io/v1beta1" }}
            {{- $velero_api := "velero.io/v1" }}
            {{- $kind_schedule := "Schedule" }}
            {{- $schedule_label := "cluster.open-cluster-management.io/backup-schedule-type, cluster.open-cluster-management.io/backup-schedule-type in (resources)"}}
            {{- $kind_restore := "Restore" }}
            {{- $ns := "open-cluster-management-backup" }}   
            {{- $volsync_secret := "restic-secret" }} 

            {{- /* common volsync config; to define different config for a PVC, create a volsync-config-pvc-ns-pvcname configMap */ -}}
            {{- $volsync_map := "volsync-config" }} 
            {{- $volsync_label := "cluster.open-cluster-management.io/volsync" }}

            {{- $volsync_backup_cond := gt (len ( lookup $velero_api $kind_schedule $ns "" $schedule_label).items ) 0 }}
            {{- $restore_label :=  "velero.io/backup-name" }}  
            {{- $backup_name_prefix :=  "acm-credentials-schedule-" }}
            {{- $volsync_pvcs := "volsync-config-pvcs" }}

            {{- /* Create the volsync ReplicationDestination and secret - if Restore exists, PVC is created by a Restore and no Backup is running */ -}}
            {{- /* Use the volsync-config-pvcns-pvcname config instead of the default volsync-config map, if such map exists under the $ns */ -}}

            {{- /* volsync-config map should exist */ -}}
            {{- $volsync_pvcs_map := lookup "v1" "ConfigMap" $ns $volsync_pvcs }}
            {{- $volsync_restore_cond := eq $volsync_pvcs_map.metadata.name $volsync_pvcs }}
              
            {{ if and ( not $volsync_backup_cond ) ($volsync_restore_cond) }}

              {{- $restore_name := (index $volsync_pvcs_map.metadata.labels "velero.io/restore-name") }}
              {{- $backup_name := (index $volsync_pvcs_map.metadata.labels "velero.io/backup-name") }}
              {{- $restore_timestamp_trim := trimAll $backup_name_prefix $backup_name  }}
              
              {{- $acm_restore_name_fixed := split $backup_name_prefix $restore_name }} 
              {{- $acm_restore_name := (cat $acm_restore_name_fixed._0 $backup_name) | replace " " "" }}

              {{- $acm_restore := lookup $velero_api $kind_restore $ns $acm_restore_name  }}

              {{- /* the acm restore should exist, so this is the passive hub */ -}}
              {{ if and (eq $acm_restore.metadata.name  $acm_restore_name) }}
                {{- range $pvc_data := split "##" (fromConfigMap $ns $volsync_pvcs "pvcs") }} 

                {{- $pvc_list := splitn "#" 2 $pvc_data }}
                {{- $pvc_namespace := $pvc_list._0 }}
                {{- $pvc_name := $pvc_list._1 }}

                {{- $pvc_config_name := ( (cat $volsync_map "-" $pvc_namespace "-" $pvc_name ) | replace " " "" ) }}
                {{ if eq ( lookup "v1" "ConfigMap" $ns $pvc_config_name ).metadata.name  $pvc_config_name }}   
                  {{ $volsync_map = $pvc_config_name }}
                {{- end }}
                {{- $secret_name := fromConfigMap $ns $volsync_map "repository" }}
                {{- $pvc_config_info_name := ( (cat $volsync_map "-info-" $pvc_name ) | replace " " "" ) }}

                {{ if eq ( lookup "v1" "ConfigMap" $pvc_namespace  $pvc_config_info_name ).metadata.name  $pvc_config_info_name }}

                  {{- $storageClassPVC := fromConfigMap $pvc_namespace $pvc_config_info_name "storageClassName" }}
                  {{- range $changeStorageMap := ( lookup "v1" "ConfigMap" $ns "" "velero.io/change-storage-class" ).items }}
                    {{ $mappingClass := fromConfigMap $ns $changeStorageMap.metadata.name $storageClassPVC }} 
                    {{- if not (eq $mappingClass "")}}
                      {{ $storageClassPVC = $mappingClass }}
                    {{- end }}
                  {{- end }}

                  - complianceType: musthave
                    objectDefinition:
                      kind: PersistentVolumeClaim
                      apiVersion: v1
                      metadata:
                        name: {{ $pvc_name }}
                        namespace: {{ $pvc_namespace }}
                        labels:
                          {{ $volsync_label }}: volsync
                      spec:
                        storageClassName: {{ $storageClassPVC }}
                        resources:
                          requests:
                            storage: '{{ fromConfigMap $pvc_namespace $pvc_config_info_name "resources.requests.storage" }}'
                        volumeMode: '{{ fromConfigMap $pvc_namespace $pvc_config_info_name "volumeMode" }}'    
                        {{ $accessModes := trimAll " " (fromConfigMap $pvc_namespace $pvc_config_info_name "resources.accessModes") }}                  
                        {{- if not (eq $accessModes "" ) }}
                        accessModes:
                          {{- range $modes := split " " $accessModes }} 
                          - {{ $modes }}
                          {{- end }}
                        {{- end }}  
                {{- $secretName := ( (cat $pvc_name "-"  (fromConfigMap $ns $volsync_map "repository") ) | replace " " "" ) }}
                {{- /* truncate from the front, the Dest name, if the string is longer than 50 chars ; a job batch starting with volsync-dst- is generated from this name and it must be less than 63 chars */ -}}
                {{- $rd_name :=  trunc -50 (cat $pvc_name $restore_timestamp_trim | replace " " "") }}

                {{- $common_restic_repo := ( lookup "v1" "Secret" $ns $volsync_secret ).data.RESTIC_REPOSITORY | base64dec }}
      
                  - complianceType: musthave
                    objectDefinition:
                      apiVersion: v1
                      kind: Secret
                      metadata:
                        name: '{{ $secretName }}'
                        namespace: {{ $pvc_namespace }}                      
                      data:
                {{- range $key, $value := ( lookup "v1" "Secret" $ns $volsync_secret ).data }}
                  {{- if not (eq $key "RESTIC_REPOSITORY")}}
                        {{ $key }}: {{ $value }}
                    {{- end }}    
                {{- end }}
                        RESTIC_REPOSITORY: {{ ( ( (cat $common_restic_repo "/" $pvc_namespace "-" $pvc_name ) | replace " " "" ) | base64enc ) }}
                      type: Opaque
                  - complianceType: musthave
                    objectDefinition:
                      kind: ReplicationDestination
                      apiVersion: volsync.backube/v1alpha1
                      metadata:
                        name: {{ $rd_name }}
                        namespace: {{ $pvc_namespace }}
                        labels:
                          "restore-name": {{ $restore_name }}
                          "backup-name": {{ $backup_name }}
                      spec:
                        restic:
                          repository: {{ $secretName }} 
                          destinationPVC: {{ $pvc_name }}
                          copyMethod: Direct
                        trigger:
                          manual: restore-once
                  {{- end }}        
                {{- end }}  
              {{- end }}
            {{- end }}  
          remediationAction: enforce
          severity: high
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: check-destination-replication-error 
        spec:
          object-templates-raw: |
            {{- $volsync_label := "cluster.open-cluster-management.io/volsync" }}
            {{- $api := "cluster.open-cluster-management.io/v1beta1" }}
            {{- $velero_api := "velero.io/v1" }}
            {{- $kind_schedule := "Schedule" }}
            {{- $ns := "open-cluster-management-backup" }}
            {{- $kind_restore := "Restore" }} 
            {{- $schedule_label := "cluster.open-cluster-management.io/backup-schedule-type, cluster.open-cluster-management.io/backup-schedule-type in (resources)"}}
            {{- $volsync_backup_cond := gt (len ( lookup $velero_api $kind_schedule $ns "" $schedule_label).items ) 0 }}
            
            {{- /* volsync-config-pvcs map should exist */ -}}
            {{- $volsync_pvcs := "volsync-config-pvcs" }}
            {{- $volsync_pvcs_map := lookup "v1" "ConfigMap" $ns $volsync_pvcs }}
            {{- $volsync_restore_cond := eq $volsync_pvcs_map.metadata.name $volsync_pvcs }}

            {{- /* The volsync destination-source should not be in error state */ -}}
            {{ if and ( not $volsync_backup_cond ) ($volsync_restore_cond)}}
              {{- $backup_name := (index $volsync_pvcs_map.metadata.labels "velero.io/backup-name") }}

              {{- range $rd := (lookup "volsync.backube/v1alpha1" "ReplicationDestination" "" "" "backup-name").items }}
                - complianceType: mustnothave
                  objectDefinition:
                    apiVersion: volsync.backube/v1alpha1
                    kind: ReplicationDestination
                    metadata:
                      namespace: {{ $rd.metadata.namespace }}
                      labels:
                        backup-name: {{ $backup_name }}
                    status:
                      conditions:
                        - reason: Error
                          type: Synchronizing
              {{- end }}
            {{- end }}
          remediationAction: inform
          severity: high   
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: check-destination-replication-success 
        spec:
          object-templates-raw: |
            {{- $volsync_label := "cluster.open-cluster-management.io/volsync" }}
            {{- $api := "cluster.open-cluster-management.io/v1beta1" }}
            {{- $velero_api := "velero.io/v1" }}
            {{- $kind_schedule := "Schedule" }}
            {{- $ns := "open-cluster-management-backup" }}
            {{- $kind_restore := "Restore" }} 
            {{- $schedule_label := "cluster.open-cluster-management.io/backup-schedule-type, cluster.open-cluster-management.io/backup-schedule-type in (resources)"}}
            {{- $volsync_backup_cond := gt (len ( lookup $velero_api $kind_schedule $ns "" $schedule_label).items ) 0 }}
            
            {{- /* volsync-config-pvcs map should exist */ -}}
            {{- $volsync_pvcs := "volsync-config-pvcs" }}
            {{- $volsync_pvcs_map := lookup "v1" "ConfigMap" $ns $volsync_pvcs }}
            {{- $volsync_restore_cond := eq $volsync_pvcs_map.metadata.name $volsync_pvcs }}

            {{- /* The volsync destination-source should be successful */ -}}
            {{ if and ( not $volsync_backup_cond ) ($volsync_restore_cond)}}
              {{- $backup_name := (index $volsync_pvcs_map.metadata.labels "velero.io/backup-name") }}

              {{- range $rd := (lookup "volsync.backube/v1alpha1" "ReplicationDestination" "" "" "backup-name").items }}
                - complianceType: musthave
                  objectDefinition:
                    apiVersion: volsync.backube/v1alpha1
                    kind: ReplicationDestination
                    metadata:
                      namespace: {{ $rd.metadata.namespace }}
                      labels:
                        backup-name: {{ $backup_name }}
                    status:
                      latestMoverStatus:
                        result: Successful
                - complianceType: musthave
                  objectDefinition:
                    apiVersion: v1
                    kind: PersistentVolumeClaim
                    metadata:
                      namespace: {{ $rd.metadata.namespace }}
                      name: {{ $rd.spec.restic.destinationPVC }}
                    status:
                      phase: Bound
              {{- end }}
            {{- end }}
          remediationAction: inform
          severity: high         
---
apiVersion: cluster.open-cluster-management.io/v1beta1
kind: Placement
metadata:
  name: volsync-placement
  namespace: open-cluster-management-backup
spec:
  clusterSets:
    - default
  predicates:
    - requiredClusterSelector:
        labelSelector:
          matchExpressions:
            - key: name
              operator: In
              values:
                - local-cluster
---
apiVersion: policy.open-cluster-management.io/v1beta1
kind: PolicySet
metadata:
  name: acm-volsync
  namespace: open-cluster-management-backup
spec:
  description: backup support for PVC with cluster.open-cluster-management.io/volsync label
  policies:
    - acm-volsync-config
    - acm-volsync-source
    - acm-volsync-destination
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: volsync-placement
  namespace: open-cluster-management-backup
placementRef:
  name: volsync-placement
  apiGroup: cluster.open-cluster-management.io
  kind: Placement
subjects:
  - name: acm-volsync
    apiGroup: policy.open-cluster-management.io
    kind: PolicySet
---
apiVersion: cluster.open-cluster-management.io/v1beta2
kind: ManagedClusterSetBinding
metadata:
  name: default
  namespace: open-cluster-management-backup
spec:
  clusterSet: default